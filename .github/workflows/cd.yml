name: cd

on:
  push:
    branches: [main]

jobs:
  Deploy:
    runs-on: ubuntu-latest
    env:
      # Secrets expected (configure in GitHub repo settings -> Secrets and variables -> Actions):
      # GCP_CREDENTIALS: Service Account JSON key with Cloud Build + Artifact Registry permissions
      # GCP_PROJECT_ID: e.g. my-gcp-project
      # GAR_HOST: e.g. us-central1-docker.pkg.dev (region-docker host)
      # GAR_REPOSITORY: e.g. notely-ar-repo
      # (Optional) IMAGE_NAME secret if you don't want the default below.
      IMAGE_NAME: notely
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.25.1"
      - name: Build binary
        run: |
          chmod +x scripts/buildprod.sh
          ./scripts/buildprod.sh
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS }}

      - name: Set up gcloud CLI
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          export_default_credentials: true

      - name: Configure Artifact Registry Docker auth
        run: |
          set -euo pipefail
          : "${{ secrets.GAR_HOST }}"  # Ensure secret present
          gcloud auth configure-docker ${{ secrets.GAR_HOST }} -q

      - name: Build and push image (Cloud Build)
        id: build
        env:
            GAR_HOST: ${{ secrets.GAR_HOST }}
            GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
            GAR_REPOSITORY: ${{ secrets.GAR_REPOSITORY }}
        run: |
          set -euo pipefail
          : "${GAR_HOST:?GAR_HOST secret missing}"
          : "${GCP_PROJECT_ID:?GCP_PROJECT_ID secret missing}"
          : "${GAR_REPOSITORY:?GAR_REPOSITORY secret missing}"
          : "${IMAGE_NAME:?IMAGE_NAME env missing}"
          IMAGE_TAG="${GITHUB_SHA::7}"
          IMAGE_URI="${GAR_HOST}/${GCP_PROJECT_ID}/${GAR_REPOSITORY}/${IMAGE_NAME}:${IMAGE_TAG}"
          echo "Submitting build to Cloud Build: ${IMAGE_URI}" 
          gcloud builds submit --tag "${IMAGE_URI}" .
          echo "Image pushed: ${IMAGE_URI}"
          echo "image-uri=${IMAGE_URI}" >> "$GITHUB_OUTPUT"
