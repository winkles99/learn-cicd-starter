name: cd

on:
  push:
    branches: [main]

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    env:
      # Secrets
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
      # Deployment parameters (adjust if your infra differs)
      REGION: us-central1
      PROJECT_ID: notely-472602-472604
      REPOSITORY: notely-ar-repo
      IMAGE: notely

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          # Match go.mod (go 1.22). Pin patch for reproducibility.
          go-version: "1.22.6"

      - name: Build app
        run: ./scripts/buildprod.sh

      - id: auth
        name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Build and push Docker image
        run: |
          set -euo pipefail
          SHORT_SHA="${GITHUB_SHA::7}"
          IMAGE_URI="${REGION}-docker.pkg.dev/${PROJECT_ID}/${REPOSITORY}/${IMAGE}:${SHORT_SHA}"
          echo "Building image: ${IMAGE_URI}"
          gcloud builds submit --tag "${IMAGE_URI}" .
          echo "Tagging :latest"
          gcloud container images add-tag "${IMAGE_URI}" "${REGION}-docker.pkg.dev/${PROJECT_ID}/${REPOSITORY}/${IMAGE}:latest" --quiet
          echo "Image ready: ${IMAGE_URI} and :latest"

      - name: Install goose
        run: go install github.com/pressly/goose/v3/cmd/goose@latest

      - name: Run migrations
        if: env.DATABASE_URL != ''
        run: ./scripts/migrateup.sh

      - name: Deploy to Cloud Run (notely)
        run: |
          set -euo pipefail
          SHORT_SHA="${GITHUB_SHA::7}"
          IMAGE_URI="${REGION}-docker.pkg.dev/${PROJECT_ID}/${REPOSITORY}/${IMAGE}:${SHORT_SHA}"
          echo "Deploying ${IMAGE_URI} to Cloud Run service 'notely' in ${REGION}"
          gcloud run deploy notely \
            --image "${IMAGE_URI}" \
            --region "${REGION}" \
            --allow-unauthenticated \
            --project "${PROJECT_ID}" \
            --max-instances=4 \
            --set-env-vars "PORT=8080,DATABASE_URL=${DATABASE_URL}" \
            --platform=managed
          echo "Deployment complete"